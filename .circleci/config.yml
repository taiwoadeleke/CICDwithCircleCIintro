# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  print-hello:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - run: return 0
      - run:
          name: on error
          command: echo "this is error"
          when: on_fail 
    
      - run: echo Hello
  say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      
      - run: echo  World$my_own_var
  save_hello_world_output:
    docker:
      - image: circleci/node:13.8.0
    steps:
    
      - run: echo "Hello Dear" > ~/output.txt
      - persist_to_workspace:
          root: ~/
            # Must be relative path from root
          paths:
              - output.txt
  print_output_file:
    docker:
      - image: circleci/node:13.8.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/
      
      - run: cat ~/output.txt


# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  print-say-hello:
    jobs:
      - print-hello
      - say-hello:
          requires:
            - print-hello

      - save_hello_world_output
      - print_output_file:
          requires:
            - save_hello_world_output
